// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;
using namespace arma;

// SMCforPT
List SMCforPT(const mat X, const int G, const ivec groups_input, const mat grid_points, const ivec groups_pred_input, const double eta_R, const int I, const List model_parameters_list, const int M, const int max_K, const int NL, const double mixing_resample, const double thresh_resample, const int minimum_size, const int do_density_est, const int method);
RcppExport SEXP _SMCMP_SMCforPT(SEXP XSEXP, SEXP GSEXP, SEXP groups_inputSEXP, SEXP grid_pointsSEXP, SEXP groups_pred_inputSEXP, SEXP eta_RSEXP, SEXP ISEXP, SEXP model_parameters_listSEXP, SEXP MSEXP, SEXP max_KSEXP, SEXP NLSEXP, SEXP mixing_resampleSEXP, SEXP thresh_resampleSEXP, SEXP minimum_sizeSEXP, SEXP do_density_estSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int >::type G(GSEXP);
    Rcpp::traits::input_parameter< const ivec >::type groups_input(groups_inputSEXP);
    Rcpp::traits::input_parameter< const mat >::type grid_points(grid_pointsSEXP);
    Rcpp::traits::input_parameter< const ivec >::type groups_pred_input(groups_pred_inputSEXP);
    Rcpp::traits::input_parameter< const double >::type eta_R(eta_RSEXP);
    Rcpp::traits::input_parameter< const int >::type I(ISEXP);
    Rcpp::traits::input_parameter< const List >::type model_parameters_list(model_parameters_listSEXP);
    Rcpp::traits::input_parameter< const int >::type M(MSEXP);
    Rcpp::traits::input_parameter< const int >::type max_K(max_KSEXP);
    Rcpp::traits::input_parameter< const int >::type NL(NLSEXP);
    Rcpp::traits::input_parameter< const double >::type mixing_resample(mixing_resampleSEXP);
    Rcpp::traits::input_parameter< const double >::type thresh_resample(thresh_resampleSEXP);
    Rcpp::traits::input_parameter< const int >::type minimum_size(minimum_sizeSEXP);
    Rcpp::traits::input_parameter< const int >::type do_density_est(do_density_estSEXP);
    Rcpp::traits::input_parameter< const int >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(SMCforPT(X, G, groups_input, grid_points, groups_pred_input, eta_R, I, model_parameters_list, M, max_K, NL, mixing_resample, thresh_resample, minimum_size, do_density_est, method));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SMCMP_SMCforPT", (DL_FUNC) &_SMCMP_SMCforPT, 16},
    {NULL, NULL, 0}
};

RcppExport void R_init_SMCMP(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
